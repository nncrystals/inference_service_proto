# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: inference_service.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='inference_service.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x17inference_service.proto\".\n\x10InferenceOptions\x12\x1a\n\x12num_image_returned\x18\x01 \x01(\x05\"*\n\x05Image\x12\x13\n\x0bimages_data\x18\x01 \x01(\x0c\x12\x0c\n\x04name\x18\x02 \x01(\t\"K\n\x11ImageBatchRequest\x12\x1e\n\x03opt\x18\x01 \x01(\x0b\x32\x11.InferenceOptions\x12\x16\n\x06images\x18\x02 \x03(\x0b\x32\x06.Image\"?\n\tRectangle\x12\x0b\n\x03xlt\x18\x01 \x01(\x01\x12\x0b\n\x03ylt\x18\x02 \x01(\x01\x12\x0b\n\x03xrb\x18\x03 \x01(\x01\x12\x0b\n\x03yrb\x18\x04 \x01(\x01\"#\n\x03RLE\x12\x0c\n\x04size\x18\x01 \x03(\x05\x12\x0e\n\x06\x63ounts\x18\x02 \x01(\t\"o\n\tDetection\x12\x11\n\x03rle\x18\x01 \x01(\x0b\x32\x04.RLE\x12\x0f\n\x07\x63ropped\x18\x02 \x01(\x08\x12\x10\n\x08\x63\x61tegory\x18\x03 \x01(\x05\x12\x12\n\nconfidence\x18\x04 \x01(\x01\x12\x18\n\x04\x62\x62ox\x18\x05 \x01(\x0b\x32\n.Rectangle\"B\n\x0eResultPerImage\x12\x10\n\x08image_id\x18\x01 \x01(\t\x12\x1e\n\ndetections\x18\x02 \x03(\x0b\x32\n.Detection\"S\n\x0fInferenceResult\x12\x1f\n\x0freturned_images\x18\x01 \x03(\x0b\x32\x06.Image\x12\x1f\n\x06result\x18\x02 \x03(\x0b\x32\x0f.ResultPerImage2>\n\tInference\x12\x31\n\tInference\x12\x12.ImageBatchRequest\x1a\x10.InferenceResultb\x06proto3')
)




_INFERENCEOPTIONS = _descriptor.Descriptor(
  name='InferenceOptions',
  full_name='InferenceOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='num_image_returned', full_name='InferenceOptions.num_image_returned', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=27,
  serialized_end=73,
)


_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='images_data', full_name='Image.images_data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='Image.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=75,
  serialized_end=117,
)


_IMAGEBATCHREQUEST = _descriptor.Descriptor(
  name='ImageBatchRequest',
  full_name='ImageBatchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='opt', full_name='ImageBatchRequest.opt', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='images', full_name='ImageBatchRequest.images', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=119,
  serialized_end=194,
)


_RECTANGLE = _descriptor.Descriptor(
  name='Rectangle',
  full_name='Rectangle',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='xlt', full_name='Rectangle.xlt', index=0,
      number=1, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ylt', full_name='Rectangle.ylt', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='xrb', full_name='Rectangle.xrb', index=2,
      number=3, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='yrb', full_name='Rectangle.yrb', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=196,
  serialized_end=259,
)


_RLE = _descriptor.Descriptor(
  name='RLE',
  full_name='RLE',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='size', full_name='RLE.size', index=0,
      number=1, type=5, cpp_type=1, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='counts', full_name='RLE.counts', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=261,
  serialized_end=296,
)


_DETECTION = _descriptor.Descriptor(
  name='Detection',
  full_name='Detection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rle', full_name='Detection.rle', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cropped', full_name='Detection.cropped', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='category', full_name='Detection.category', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='Detection.confidence', index=3,
      number=4, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bbox', full_name='Detection.bbox', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=298,
  serialized_end=409,
)


_RESULTPERIMAGE = _descriptor.Descriptor(
  name='ResultPerImage',
  full_name='ResultPerImage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='image_id', full_name='ResultPerImage.image_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='detections', full_name='ResultPerImage.detections', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=411,
  serialized_end=477,
)


_INFERENCERESULT = _descriptor.Descriptor(
  name='InferenceResult',
  full_name='InferenceResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='returned_images', full_name='InferenceResult.returned_images', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='InferenceResult.result', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=479,
  serialized_end=562,
)

_IMAGEBATCHREQUEST.fields_by_name['opt'].message_type = _INFERENCEOPTIONS
_IMAGEBATCHREQUEST.fields_by_name['images'].message_type = _IMAGE
_DETECTION.fields_by_name['rle'].message_type = _RLE
_DETECTION.fields_by_name['bbox'].message_type = _RECTANGLE
_RESULTPERIMAGE.fields_by_name['detections'].message_type = _DETECTION
_INFERENCERESULT.fields_by_name['returned_images'].message_type = _IMAGE
_INFERENCERESULT.fields_by_name['result'].message_type = _RESULTPERIMAGE
DESCRIPTOR.message_types_by_name['InferenceOptions'] = _INFERENCEOPTIONS
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['ImageBatchRequest'] = _IMAGEBATCHREQUEST
DESCRIPTOR.message_types_by_name['Rectangle'] = _RECTANGLE
DESCRIPTOR.message_types_by_name['RLE'] = _RLE
DESCRIPTOR.message_types_by_name['Detection'] = _DETECTION
DESCRIPTOR.message_types_by_name['ResultPerImage'] = _RESULTPERIMAGE
DESCRIPTOR.message_types_by_name['InferenceResult'] = _INFERENCERESULT
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

InferenceOptions = _reflection.GeneratedProtocolMessageType('InferenceOptions', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCEOPTIONS,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:InferenceOptions)
  })
_sym_db.RegisterMessage(InferenceOptions)

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), {
  'DESCRIPTOR' : _IMAGE,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:Image)
  })
_sym_db.RegisterMessage(Image)

ImageBatchRequest = _reflection.GeneratedProtocolMessageType('ImageBatchRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMAGEBATCHREQUEST,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:ImageBatchRequest)
  })
_sym_db.RegisterMessage(ImageBatchRequest)

Rectangle = _reflection.GeneratedProtocolMessageType('Rectangle', (_message.Message,), {
  'DESCRIPTOR' : _RECTANGLE,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:Rectangle)
  })
_sym_db.RegisterMessage(Rectangle)

RLE = _reflection.GeneratedProtocolMessageType('RLE', (_message.Message,), {
  'DESCRIPTOR' : _RLE,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:RLE)
  })
_sym_db.RegisterMessage(RLE)

Detection = _reflection.GeneratedProtocolMessageType('Detection', (_message.Message,), {
  'DESCRIPTOR' : _DETECTION,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:Detection)
  })
_sym_db.RegisterMessage(Detection)

ResultPerImage = _reflection.GeneratedProtocolMessageType('ResultPerImage', (_message.Message,), {
  'DESCRIPTOR' : _RESULTPERIMAGE,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:ResultPerImage)
  })
_sym_db.RegisterMessage(ResultPerImage)

InferenceResult = _reflection.GeneratedProtocolMessageType('InferenceResult', (_message.Message,), {
  'DESCRIPTOR' : _INFERENCERESULT,
  '__module__' : 'inference_service_pb2'
  # @@protoc_insertion_point(class_scope:InferenceResult)
  })
_sym_db.RegisterMessage(InferenceResult)



_INFERENCE = _descriptor.ServiceDescriptor(
  name='Inference',
  full_name='Inference',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=564,
  serialized_end=626,
  methods=[
  _descriptor.MethodDescriptor(
    name='Inference',
    full_name='Inference.Inference',
    index=0,
    containing_service=None,
    input_type=_IMAGEBATCHREQUEST,
    output_type=_INFERENCERESULT,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_INFERENCE)

DESCRIPTOR.services_by_name['Inference'] = _INFERENCE

# @@protoc_insertion_point(module_scope)
